<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CollegeDataSet" targetNamespace="http://tempuri.org/CollegeDataSet.xsd" xmlns:mstns="http://tempuri.org/CollegeDataSet.xsd" xmlns="http://tempuri.org/CollegeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CollegeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CollegeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.lab11.Properties.Settings.GlobalReference.Default.CollegeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AuthorTableAdapter" GeneratorDataComponentClassName="AuthorTableAdapter" Name="Author" UserDataComponentName="AuthorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CollegeConnectionString (Settings)" DbObjectName="College.dbo.Author" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Author] WHERE (([BookID] = @Original_BookID) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Author] ([BookID], [Name]) VALUES (@BookID, @Name);
SELECT BookID, Name FROM dbo.Author WHERE (BookID = @BookID) AND (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BookID, Name FROM dbo.Author</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Author] SET [BookID] = @BookID, [Name] = @Name WHERE (([BookID] = @Original_BookID) AND ([Name] = @Original_Name));
SELECT BookID, Name FROM dbo.Author WHERE (BookID = @BookID) AND (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BookID" DataSetColumn="BookID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookTableAdapter" GeneratorDataComponentClassName="BookTableAdapter" Name="Book" UserDataComponentName="BookTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CollegeConnectionString (Settings)" DbObjectName="College.dbo.Book" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Book] WHERE (([BookID] = @Original_BookID) AND ([Title] = @Original_Title) AND ([Publisher] = @Original_Publisher))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Publisher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Publisher" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Book] ([BookID], [Title], [Publisher]) VALUES (@BookID, @Title, @Publisher);
SELECT BookID, Title, Publisher FROM dbo.Book WHERE (BookID = @BookID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Publisher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Publisher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BookID, Title, Publisher FROM dbo.Book</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Book] SET [BookID] = @BookID, [Title] = @Title, [Publisher] = @Publisher WHERE (([BookID] = @Original_BookID) AND ([Title] = @Original_Title) AND ([Publisher] = @Original_Publisher));
SELECT BookID, Title, Publisher FROM dbo.Book WHERE (BookID = @BookID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Publisher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Publisher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Publisher" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Publisher" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BookID" DataSetColumn="BookID" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="Publisher" DataSetColumn="Publisher" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookCopiesTableAdapter" GeneratorDataComponentClassName="BookCopiesTableAdapter" Name="BookCopies" UserDataComponentName="BookCopiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CollegeConnectionString (Settings)" DbObjectName="College.dbo.BookCopies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BookCopies] WHERE (([BookID] = @Original_BookID) AND ([BranchID] = @Original_BranchID) AND ([NumCopies] = @Original_NumCopies))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumCopies" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumCopies" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BookCopies] ([BookID], [BranchID], [NumCopies]) VALUES (@BookID, @BranchID, @NumCopies);
SELECT BookID, BranchID, NumCopies FROM dbo.BookCopies WHERE (BookID = @BookID) AND (BranchID = @BranchID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumCopies" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumCopies" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BookID, BranchID, NumCopies FROM dbo.BookCopies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BookCopies] SET [BookID] = @BookID, [BranchID] = @BranchID, [NumCopies] = @NumCopies WHERE (([BookID] = @Original_BookID) AND ([BranchID] = @Original_BranchID) AND ([NumCopies] = @Original_NumCopies));
SELECT BookID, BranchID, NumCopies FROM dbo.BookCopies WHERE (BookID = @BookID) AND (BranchID = @BranchID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumCopies" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumCopies" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BookID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BookID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumCopies" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumCopies" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BookID" DataSetColumn="BookID" />
              <Mapping SourceColumn="BranchID" DataSetColumn="BranchID" />
              <Mapping SourceColumn="NumCopies" DataSetColumn="NumCopies" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BranchTableAdapter" GeneratorDataComponentClassName="BranchTableAdapter" Name="Branch" UserDataComponentName="BranchTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CollegeConnectionString (Settings)" DbObjectName="College.dbo.Branch" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Branch] WHERE (([BranchID] = @Original_BranchID) AND ([BranchName] = @Original_BranchName) AND ([Address] = @Original_Address))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BranchName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Branch] ([BranchID], [BranchName], [Address]) VALUES (@BranchID, @BranchName, @Address);
SELECT BranchID, BranchName, Address FROM dbo.Branch WHERE (BranchID = @BranchID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BranchName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BranchID, BranchName, Address FROM dbo.Branch</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Branch] SET [BranchID] = @BranchID, [BranchName] = @BranchName, [Address] = @Address WHERE (([BranchID] = @Original_BranchID) AND ([BranchName] = @Original_BranchName) AND ([Address] = @Original_Address));
SELECT BranchID, BranchName, Address FROM dbo.Branch WHERE (BranchID = @BranchID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BranchName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BranchID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BranchName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BranchName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BranchID" DataSetColumn="BranchID" />
              <Mapping SourceColumn="BranchName" DataSetColumn="BranchName" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CollegeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CollegeDataSet" msprop:Generator_UserDSName="CollegeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Author" msprop:Generator_TableClassName="AuthorDataTable" msprop:Generator_TableVarName="tableAuthor" msprop:Generator_TablePropName="Author" msprop:Generator_RowDeletingName="AuthorRowDeleting" msprop:Generator_RowChangingName="AuthorRowChanging" msprop:Generator_RowEvHandlerName="AuthorRowChangeEventHandler" msprop:Generator_RowDeletedName="AuthorRowDeleted" msprop:Generator_UserTableName="Author" msprop:Generator_RowChangedName="AuthorRowChanged" msprop:Generator_RowEvArgName="AuthorRowChangeEvent" msprop:Generator_RowClassName="AuthorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BookID" msprop:Generator_ColumnVarNameInTable="columnBookID" msprop:Generator_ColumnPropNameInRow="BookID" msprop:Generator_ColumnPropNameInTable="BookIDColumn" msprop:Generator_UserColumnName="BookID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Book" msprop:Generator_TableClassName="BookDataTable" msprop:Generator_TableVarName="tableBook" msprop:Generator_TablePropName="Book" msprop:Generator_RowDeletingName="BookRowDeleting" msprop:Generator_RowChangingName="BookRowChanging" msprop:Generator_RowEvHandlerName="BookRowChangeEventHandler" msprop:Generator_RowDeletedName="BookRowDeleted" msprop:Generator_UserTableName="Book" msprop:Generator_RowChangedName="BookRowChanged" msprop:Generator_RowEvArgName="BookRowChangeEvent" msprop:Generator_RowClassName="BookRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BookID" msprop:Generator_ColumnVarNameInTable="columnBookID" msprop:Generator_ColumnPropNameInRow="BookID" msprop:Generator_ColumnPropNameInTable="BookIDColumn" msprop:Generator_UserColumnName="BookID" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Publisher" msprop:Generator_ColumnVarNameInTable="columnPublisher" msprop:Generator_ColumnPropNameInRow="Publisher" msprop:Generator_ColumnPropNameInTable="PublisherColumn" msprop:Generator_UserColumnName="Publisher">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BookCopies" msprop:Generator_TableClassName="BookCopiesDataTable" msprop:Generator_TableVarName="tableBookCopies" msprop:Generator_TablePropName="BookCopies" msprop:Generator_RowDeletingName="BookCopiesRowDeleting" msprop:Generator_RowChangingName="BookCopiesRowChanging" msprop:Generator_RowEvHandlerName="BookCopiesRowChangeEventHandler" msprop:Generator_RowDeletedName="BookCopiesRowDeleted" msprop:Generator_UserTableName="BookCopies" msprop:Generator_RowChangedName="BookCopiesRowChanged" msprop:Generator_RowEvArgName="BookCopiesRowChangeEvent" msprop:Generator_RowClassName="BookCopiesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BookID" msprop:Generator_ColumnVarNameInTable="columnBookID" msprop:Generator_ColumnPropNameInRow="BookID" msprop:Generator_ColumnPropNameInTable="BookIDColumn" msprop:Generator_UserColumnName="BookID" type="xs:int" />
              <xs:element name="BranchID" msprop:Generator_ColumnVarNameInTable="columnBranchID" msprop:Generator_ColumnPropNameInRow="BranchID" msprop:Generator_ColumnPropNameInTable="BranchIDColumn" msprop:Generator_UserColumnName="BranchID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NumCopies" msprop:Generator_ColumnVarNameInTable="columnNumCopies" msprop:Generator_ColumnPropNameInRow="NumCopies" msprop:Generator_ColumnPropNameInTable="NumCopiesColumn" msprop:Generator_UserColumnName="NumCopies" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Branch" msprop:Generator_TableClassName="BranchDataTable" msprop:Generator_TableVarName="tableBranch" msprop:Generator_TablePropName="Branch" msprop:Generator_RowDeletingName="BranchRowDeleting" msprop:Generator_RowChangingName="BranchRowChanging" msprop:Generator_RowEvHandlerName="BranchRowChangeEventHandler" msprop:Generator_RowDeletedName="BranchRowDeleted" msprop:Generator_UserTableName="Branch" msprop:Generator_RowChangedName="BranchRowChanged" msprop:Generator_RowEvArgName="BranchRowChangeEvent" msprop:Generator_RowClassName="BranchRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BranchID" msprop:Generator_ColumnVarNameInTable="columnBranchID" msprop:Generator_ColumnPropNameInRow="BranchID" msprop:Generator_ColumnPropNameInTable="BranchIDColumn" msprop:Generator_UserColumnName="BranchID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BranchName" msprop:Generator_ColumnVarNameInTable="columnBranchName" msprop:Generator_ColumnPropNameInRow="BranchName" msprop:Generator_ColumnPropNameInTable="BranchNameColumn" msprop:Generator_UserColumnName="BranchName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Address" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_UserColumnName="Address">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Author" />
      <xs:field xpath="mstns:BookID" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Book_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Book" />
      <xs:field xpath="mstns:BookID" />
    </xs:unique>
    <xs:unique name="BookCopies_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BookCopies" />
      <xs:field xpath="mstns:BookID" />
      <xs:field xpath="mstns:BranchID" />
    </xs:unique>
    <xs:unique name="Branch_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Branch" />
      <xs:field xpath="mstns:BranchID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Author_Book" msdata:parent="Book" msdata:child="Author" msdata:parentkey="BookID" msdata:childkey="BookID" msprop:Generator_UserChildTable="Author" msprop:Generator_ChildPropName="GetAuthorRows" msprop:Generator_UserRelationName="FK_Author_Book" msprop:Generator_RelationVarName="relationFK_Author_Book" msprop:Generator_UserParentTable="Book" msprop:Generator_ParentPropName="BookRow" />
      <msdata:Relationship name="FK_BookCopies_Book" msdata:parent="Book" msdata:child="BookCopies" msdata:parentkey="BookID" msdata:childkey="BookID" msprop:Generator_UserChildTable="BookCopies" msprop:Generator_ChildPropName="GetBookCopiesRows" msprop:Generator_UserRelationName="FK_BookCopies_Book" msprop:Generator_ParentPropName="BookRow" msprop:Generator_RelationVarName="relationFK_BookCopies_Book" msprop:Generator_UserParentTable="Book" />
      <msdata:Relationship name="FK_BookCopies_Branch" msdata:parent="Branch" msdata:child="BookCopies" msdata:parentkey="BranchID" msdata:childkey="BranchID" msprop:Generator_UserChildTable="BookCopies" msprop:Generator_ChildPropName="GetBookCopiesRows" msprop:Generator_UserRelationName="FK_BookCopies_Branch" msprop:Generator_RelationVarName="relationFK_BookCopies_Branch" msprop:Generator_UserParentTable="Branch" msprop:Generator_ParentPropName="BranchRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>